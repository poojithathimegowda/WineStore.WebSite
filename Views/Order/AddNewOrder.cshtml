@model WineStore.WebSite.Models.StoreManager.OrderViewModel

@{
    ViewData["Title"] = "AddNewOrder";
}

<h1>AddNewOrder</h1>

<h4>OrderViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddNewOrder">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Order_ID" class="control-label"></label>
                <input asp-for="Order_ID" class="form-control" />
                <span asp-validation-for="Order_ID" class="text-danger"></span>
            </div>
            <!-- Other form fields -->
            <div class="form-group">
                <label asp-for="Product_Name" class="control-label"></label>
                <input asp-for="Product_Name" id="productNameInput" class="form-control" autocomplete="off" />
                <span asp-validation-for="Product_Name" class="text-danger"></span>
            </div>
            <!-- Other form fields -->
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#productNameInput").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "https://wineshopwebapi20240423191025.azurewebsites.net/api/Products/AutoComplete",
                        type: "GET",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.label,
                                    value: item.value
                                };
                            }));
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching product names:", error);
                        }
                    });
                },
                minLength: 1
            });
        });
    </script>
}
